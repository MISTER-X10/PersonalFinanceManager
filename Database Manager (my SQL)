import java.sql.*;

public class DatabaseManager {
    private static final String URL = "jdbc:mysql://localhost:3306/finance_db";
    private static final String USER = "root";
    private static final String PASSWORD = "password";

    private Connection connection;

    public DatabaseManager() {
        try {
            connection = DriverManager.getConnection(URL, USER, PASSWORD);
            createTransactionsTable();
        } catch (SQLException e) {
            System.err.println("Database connection error: " + e.getMessage());
        }
    }

    public void createTransactionsTable() {
        String sql = "CREATE TABLE IF NOT EXISTS transactions (" +
                     "id INT AUTO_INCREMENT PRIMARY KEY, " +
                     "type VARCHAR(10), " +
                     "category VARCHAR(50), " +
                     "amount DOUBLE, " +
                     "date DATE, " +
                     "description VARCHAR(255))";
        try (Statement stmt = connection.createStatement()) {
            stmt.execute(sql);
        } catch (SQLException e) {
            System.err.println("Table creation error: " + e.getMessage());
        }
    }

    public boolean addTransaction(Transaction trans) {
        String sql = "INSERT INTO transactions (type, category, amount, date, description) VALUES (?, ?, ?, ?, ?)";
        try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
            pstmt.setString(1, trans.getType());
            pstmt.setString(2, trans.getCategory());
            pstmt.setDouble(3, trans.getAmount());
            pstmt.setDate(4, new java.sql.Date(trans.getDate().getTime()));
            pstmt.setString(5, trans.getDescription());
            pstmt.executeUpdate();
            return true;
        } catch (SQLException e) {
            System.err.println("Transaction addition error: " + e.getMessage());
            return false;
        }
    }

    public ResultSet getTransactions() {
        try {
            Statement stmt = connection.createStatement();
            return stmt.executeQuery("SELECT * FROM transactions");
        } catch (SQLException e) {
            System.err.println("Transaction retrieval error: " + e.getMessage());
            return null;
        }
    }

    public void closeConnection() {
        try {
            if (connection != null && !connection.isClosed())
                connection.close();
        } catch (SQLException e) {
            System.err.println("Database closing error: " + e.getMessage());
        }
    }
}
